version: "3.8"

services:

  # nginx - reverse proxy
  proxy:
    restart: unless-stopped
    image: nginx:1.21.6-alpine
    container_name: juniko-nginx
    ports:
      - "443:443"
      - "6697:6697"
    volumes:
      - ./volumes/nginx/certs/:/etc/nginx/certs/
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf

  # dashboard
  dashboard:
    container_name: juniko-dashboard
    hostname: dashboard
    restart: unless-stopped
    build:
      context: ./repos/dashboard/
    expose:
      - 80

  # portfolio
  portfolio:
    container_name: juniko-portfolio
    hostname: portfolio
    restart: unless-stopped
    build:
      context: ./repos/portfolio/
    expose:
      - 80

  # syncthing - file sync
  syncthing:
    image: linuxserver/syncthing:1.23.5
    container_name: juniko-syncthing
    hostname: syncthing
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./volumes/syncthing/config:/config
      - ./:/juniko
    expose:
      - 8384
    ports:
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped

  # ghost - blog
  ghost:
    image: ghost:5.8.3
    container_name: juniko-ghost
    hostname: ghost
    expose:
      - '2368'
    volumes:
      - ./volumes/ghost/content:/var/lib/ghost/content
      - /etc/localtime:/etc/localtime:ro
    environment:
      url: https://${HOSTNAME}/blog/
      mail__options__secure: 'false'
    restart: unless-stopped

  # sftpgo - file storage + streaming
  sftpgo:
    container_name: juniko-sftpgo
    hostname: sftpgo
    image: drakkan/sftpgo:v2.4.3-alpine
    restart: unless-stopped
    expose:
      - "80"
      - "10080"
    environment:
      SFTPGO_WEBDAVD__BINDINGS__0__PORT: "10080"
    volumes:
      - ./volumes/sftpgo/data:/srv/sftpgo/data
      - ./config/sftpgo/sftpgo.json:/etc/sftpgo/sftpgo.json
      - ./volumes/sftpgo/lib:/var/lib/sftpgo

  # inspircd - instant messaging (server)
  inspircd:
    image: inspircd/inspircd-docker
    container_name: juniko-inspircd
    hostname: inspircd
    restart: unless-stopped
    expose:
      - 6667

  # portainer - container administration
  portainer:
    container_name: juniko-portainer
    image: portainer/portainer-ce:2.18.1
    command: -H unix:///var/run/docker.sock
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=https://${HOSTNAME}/portainer
      - VIRTUAL_PORT=9000
    expose:
      - 9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volumes/portainer/data:/data

  # szurubooru - public image board
  server_szurubooru:
    container_name: juniko-api-booru
    hostname: api.booru
    image: szurubooru/server:latest
    depends_on:
      - postgres
    environment:
      ## These should be the names of the dependent containers listed below,
      ## or FQDNs/IP addresses if these services are running outside of Docker
      POSTGRES_HOST: postgres
      ## Credentials for database:
      POSTGRES_USER: ${BOORU_POSTGRES_USER}
      POSTGRES_PASSWORD: ${BOORU_POSTGRES_PASSWORD}
      POSTGRES_DB: booru
      ## Commented Values are Default:
      #POSTGRES_DB: defaults to same as POSTGRES_USER
      #POSTGRES_PORT: 5432
      #LOG_SQL: 0 (1 for verbose SQL logs)
    volumes:
      - ./volumes/szurubooru/data:/data
      - ./config/szurubooru/config.yaml:/opt/app/config.yaml
    restart: unless-stopped

  client_szurubooru:
    image: szurubooru/client:latest
    hostname: booru
    container_name: juniko-booru
    depends_on:
      - server_szurubooru
    restart: unless-stopped
    environment:
      BACKEND_HOST: api.booru
      BASE_URL: "/booru/"
    volumes:
      - ./volumes/szurubooru/data:/data:ro
    expose:
      - "80"

  postgres:
    container_name: juniko-postgres
    hostname: postgres
    image: postgres:11-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${BOORU_POSTGRES_USER}
      POSTGRES_PASSWORD: ${BOORU_POSTGRES_PASSWORD}
      POSTGRES_DB: booru
    volumes:
      - "./volumes/postgres/data:/var/lib/postgresql/data"
    expose:
      - "5432"

  # emby
  emby:
    container_name: juniko-emby
    hostname: emby
    image: emby/embyserver_arm64v8:4.8.0.34
    restart: unless-stopped
    expose:
      - "8096"
    volumes:
      - ./volumes/emby/tv:/mnt/tv
      - ./volumes/emby/config:/config

